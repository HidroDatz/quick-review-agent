"""init database

Revision ID: a7798b3b163f
Revises: 
Create Date: 2025-08-10 16:57:19.845616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'a7798b3b163f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('gitlab_user_id', sa.Integer(), nullable=False),
                    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('gitlab_user_id')
                    )
    op.create_table('mergerequest',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('mr_iid', sa.Integer(), nullable=False),
                    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('author_id', sa.Integer(), nullable=True),
                    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['author_id'], ['user.gitlab_user_id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('userissuecatalog',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('issue_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('last_seen_at', sa.DateTime(), nullable=False),
                    sa.Column('total_occurrences', sa.Integer(), nullable=False),
                    sa.Column('open_occurrences', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.gitlab_user_id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('usermetricsdaily',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('date', sa.DateTime(), nullable=False),
                    sa.Column('introduced_findings', sa.Integer(), nullable=False),
                    sa.Column('resolved_findings', sa.Integer(), nullable=False),
                    sa.Column('median_ttr_hours', sa.Float(), nullable=False),
                    sa.Column('top_issue_keys', sa.JSON(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['user.gitlab_user_id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'date')
                    )
    op.create_table('mrsnapshot',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('mr_id', sa.Integer(), nullable=False),
                    sa.Column('head_sha', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('base_sha', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('languages', sa.JSON(), nullable=True),
                    sa.Column('risk_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['mr_id'], ['mergerequest.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('finding',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('snapshot_id', sa.Integer(), nullable=False),
                    sa.Column('file', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('start_line', sa.Integer(), nullable=False),
                    sa.Column('end_line', sa.Integer(), nullable=False),
                    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('rule_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('rule_version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('rationale', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('recommendation', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('patch', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('confidence', sa.Float(), nullable=False),
                    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('first_seen_at', sa.DateTime(), nullable=False),
                    sa.Column('resolved_at', sa.DateTime(), nullable=True),
                    sa.Column('resolved_by_user_id', sa.Integer(), nullable=True),
                    sa.Column('evidence_excerpt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('dedupe_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('user_issue_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.ForeignKeyConstraint(['resolved_by_user_id'], ['user.gitlab_user_id'], ),
                    sa.ForeignKeyConstraint(['snapshot_id'], ['mrsnapshot.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('mrmetrics',
                    sa.Column('mr_id', sa.Integer(), nullable=False),
                    sa.Column('snapshot_id', sa.Integer(), nullable=False),
                    sa.Column('counts_by_severity', sa.JSON(), nullable=True),
                    sa.Column('counts_by_category', sa.JSON(), nullable=True),
                    sa.Column('open_count', sa.Integer(), nullable=False),
                    sa.Column('resolved_count', sa.Integer(), nullable=False),
                    sa.Column('avg_time_to_resolve_hours', sa.Float(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['mr_id'], ['mergerequest.id'], ),
                    sa.ForeignKeyConstraint(['snapshot_id'], ['mrsnapshot.id'], ),
                    sa.PrimaryKeyConstraint('mr_id', 'snapshot_id')
                    )
    op.create_table('findingtouserissue',
                    sa.Column('finding_id', sa.Integer(), nullable=False),
                    sa.Column('user_issue_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], ),
                    sa.ForeignKeyConstraint(['user_issue_id'], ['userissuecatalog.id'], ),
                    sa.PrimaryKeyConstraint('finding_id', 'user_issue_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('findingtouserissue')
    op.drop_table('mrmetrics')
    op.drop_table('finding')
    op.drop_table('mrsnapshot')
    op.drop_table('usermetricsdaily')
    op.drop_table('userissuecatalog')
    op.drop_table('mergerequest')
    op.drop_table('user')
    # ### end Alembic commands ###
